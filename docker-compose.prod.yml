services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: aba-reestr-image
    command: ["php", "/var/www/html/artisan", "octane:frankenphp"]
    volumes:
      - ./storage:/var/www/html/storage
      - ./public:/var/www/html/public
    user: "${WWWUSER}:${WWWGROUP}"
    ports:
      - "8000:8000" # Проброс порта для Octane
    depends_on:
      - pgsql
      - memcached
      - meilisearch
      - redis
    networks:
      - app-network
  horizon:
    image: aba-reestr-image
    command: ["php", "/var/www/html/artisan", "horizon"]
    stop_signal: SIGTERM # Set this for graceful shutdown if you're using fpm-apache or fpm-nginx
    healthcheck:
      # This is our native healthcheck script for Horizon
      test: ["CMD", "/usr/local/bin/healthcheck-horizon"]
      start_period: 10s
    depends_on:
      - app
      - redis
    networks:
      - app-network
  pgsql:
    image: 'postgres:17'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'pgsql:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s
  memcached:
    image: 'memcached:alpine'
    expose:
      - "11211"
    networks:
      - app-network
  meilisearch:
    image: getmeili/meilisearch:v1.11.3
    environment:
      MEILI_NO_ANALYTICS: "true"
    expose:
      - "7700"
    volumes:
      - meili_data:/meili_data
    restart: unless-stopped
    networks:
      - app-network
  redis:
    image: redis:alpine
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  pgsql:
    driver: local
  meili_data:
    driver: local
  redis-data:
    driver: local
